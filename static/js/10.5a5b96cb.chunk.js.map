{"version":3,"sources":["components/Typography.js","components/Page.js","components/HorizontalAvatarList.js","utils/colors.js","components/MapWithBubbles.js","components/SupportTicket.js","components/UserProgressTable.js","components/Widget/NumberWidget.js","components/Widget/IconWidget.js","demos/chartjs.js","demos/dashboardPage.js","pages/DashboardPage.js","components/ProductMedia.js","assets/img/products/product_640-1.jpg","assets/img/products/product_640-2.jpg","assets/img/products/product_640-3.jpg","assets/img/products/product_640-4.jpg","assets/img/products/product_640-5.jpg","assets/img/products/product_640-6.jpg","assets/img/users/100_6.jpg","assets/img/users/100_7.jpg","assets/img/users/100_8.jpg","assets/img/users/100_9.jpg","assets/img/users/100_10.jpg","assets/img/users/100_11.jpg","assets/img/users/100_12.jpg","assets/img/users/100_13.jpg","assets/img/users/100_14.jpg"],"names":["tagMap","h1","h2","h3","h4","h5","h6","p","lead","blockquote","Typography","TypoComp","Tag","tag","className","type","restProps","classes","classNames","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","b","e","length","map","index","name","active","key","HorizontalAvatarList","avatars","avatarProps","reversed","leng","count","i","avatar","isFirstItem","Avatar","id","src","style","zIndex","border","marginLeft","marginBottom","marginTop","UncontrolledTooltip","delay","show","hide","target","getColor","availableColor","window","color","getComputedStyle","document","documentElement","getPropertyValue","cityScale","scaleLinear","domain","range","BubbleMap","state","cities","secondaryColor","lightColor","projectionConfig","scale","width","height","center","disablePanning","geography","world50m","geographies","projection","default","fill","stroke","strokeWidth","outline","hover","pressed","this","city","marker","cx","cy","r","population","Component","statusMap","open","closed","pending","SupportTicket","date","text","status","onClick","Media","left","body","heading","right","Button","defualtProps","AvatarWithBadge","withBadge","position","UserProgressTable","headers","usersData","Table","responsive","item","progress","Progress","value","NumberWidget","subtitle","number","label","CardText","CardTitle","IconWidget","bgColor","Icon","icon","iconProps","inverse","CardBody","size","CardSubtitle","getStackLineChart","labels","data","canvas","gradient","getContext","createLinearGradient","addColorStop","ChartJS","helpers","alpha","rgbString","datasets","borderColor","backgroundColor","stackLineChartOptions","tooltips","intersect","animation","duration","scales","xAxes","display","yAxes","legend","productsData","image","product1Image","description","product2Image","product3Image","product4Image","product5Image","product6Image","avatarsData","user1Image","user2Image","user3Image","user4Image","user5Image","user6Image","user7Image","user8Image","user9Image","user10Image","user11Image","user12Image","user13Image","user14Image","userProgressTableData","supportTicketsData","todosData","done","chartjs","bar","stack","options","mode","stacked","doughnut","animateScale","animateRotate","line","scaleLabel","labelString","gridLines","today","Date","lastWeek","getFullYear","getMonth","getDate","DashboardPage","scrollTo","primaryColor","Row","Col","lg","md","sm","xs","CardHeader","ListGroup","flush","ListGroupItem","Badge","CardGroup","MdThumbUp","MdRateReview","MdShare","ProductMedia","reverse","selected","minDate","theme","accentColor","floatingNav","background","chevron","headerColor","selectionColor","textColor","todayColor","weekdayColor","MapWithBubbles","CardDeck","overflowX","header","avatarSize","buttonProps","supportTicket","todos","React","parentId","keyId","years","openEditModal","exit","deleteEducation","editEducation","object","eduData","marginRight","module","exports"],"mappings":"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","file":"static/js/10.5a5b96cb.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import Avatar from 'components/Avatar';\nimport React, { Fragment } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport PropTypes from 'utils/propTypes';\n\nconst HorizontalAvatarList = ({\n  tag: Tag,\n  avatars,\n  avatarProps,\n  reversed,\n  ...restProps\n}) => {\n  let leng = reversed ? avatars.length + 1 : 1;\n  const count = reversed ? () => leng-- : () => leng++;\n\n  return (\n    <Tag className=\"d-flex align-items-center\" {...restProps}>\n      {avatars &&\n        avatars.map(({ avatar, name }, i) => {\n          const index = count();\n          const isFirstItem = i === 0;\n\n          return (\n            <Fragment key={index}>\n              <Avatar\n                {...avatarProps}\n                id={`HorizontalAvatarList-avatar-${index}`}\n                src={avatar}\n                style={{\n                  zIndex: index,\n                  border: '3px solid #fff',\n                  marginLeft: !isFirstItem && -20,\n                  marginBottom: '20px',\n                  marginTop:'20px'\n                }}\n              />\n\n              {!!name && (\n                <UncontrolledTooltip\n                  delay={{ show: 0, hide: 0 }}\n                  target={`HorizontalAvatarList-avatar-${index}`}>\n                  {name}\n                </UncontrolledTooltip>\n              )}\n            </Fragment>\n          );\n        })}\n    </Tag>\n  );\n};\n\nHorizontalAvatarList.propTypes = {\n  tag: PropTypes.node,\n  avatars: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n  avatarProps: PropTypes.object,\n  reversed: PropTypes.bool,\n};\n\nHorizontalAvatarList.defaultProps = {\n  tag: 'div',\n  avatars: [],\n  avatarProps: {},\n  reversed: false,\n};\n\nexport default HorizontalAvatarList;\n","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","import world50m from 'assets/geo-data/world-50m.json';\nimport cities from 'assets/geo-data/world-most-populous-cities.json';\nimport { scaleLinear } from 'd3-scale';\nimport React, { Component } from 'react';\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Markers,\n  ZoomableGroup,\n} from 'react-simple-maps';\nimport { getColor } from 'utils/colors';\n\nconst cityScale = scaleLinear()\n  .domain([0, 37843000])\n  .range([1, 25]);\n\nclass BubbleMap extends Component {\n  state = {\n    cities,\n  };\n\n  render() {\n    // const primaryColor = getColor('primary');\n    const secondaryColor = getColor('secondary');\n    const lightColor = getColor('light');\n\n    return (\n      <ComposableMap\n        projectionConfig={{ scale: 205 }}\n        width={980}\n        height={551}\n        style={{\n          width: '100%',\n          height: 'auto',\n        }}\n      >\n        <ZoomableGroup center={[0, 20]} disablePanning>\n          <Geographies geography={world50m}>\n            {(geographies, projection) =>\n              geographies.map(\n                (geography, i) =>\n                  geography.id !== 'ATA' && (\n                    <Geography\n                      key={i}\n                      geography={geography}\n                      projection={projection}\n                      style={{\n                        default: {\n                          fill: lightColor,\n                          stroke: lightColor,\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                        hover: {\n                          fill: secondaryColor,\n                          stroke: secondaryColor,\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                        pressed: {\n                          fill: secondaryColor,\n                          stroke: secondaryColor,\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                      }}\n                    />\n                  ),\n              )\n            }\n          </Geographies>\n          <Markers>\n            {this.state.cities.map((city, i) => (\n              <Marker key={i} marker={city}>\n                <circle\n                  cx={0}\n                  cy={0}\n                  r={cityScale(city.population)}\n                  fill={secondaryColor}\n                  stroke={secondaryColor}\n                  strokeWidth=\"2\"\n                />\n              </Marker>\n            ))}\n          </Markers>\n        </ZoomableGroup>\n      </ComposableMap>\n    );\n  }\n}\n\nexport default BubbleMap;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Media, Button } from 'reactstrap';\n\nimport Avatar from './Avatar';\n\nconst statusMap = {\n  open: 'info',\n  closed: 'muted',\n  pending: 'success',\n};\n\nconst SupportTicket = ({\n  avatar,\n  name,\n  date,\n  text,\n  status,\n  onClick,\n  ...restProps\n}) => {\n  return (\n    <div {...restProps}>\n      <Media className=\"m-2\">\n        <Media left className=\"mr-2\">\n          <Avatar src={avatar} />\n        </Media>\n        <Media body>\n          <Media heading tag=\"h6\" className=\"m-0\">\n            {name}\n          </Media>\n          <p className=\"text-muted m-0\">\n            <small>{date}</small>\n          </p>\n        </Media>\n        <Media right className=\"align-self-center\">\n          <Button\n            color=\"link\"\n            className={`text-capitalize text-${statusMap[status]}`}\n          >\n            {status}\n          </Button>\n        </Media>\n      </Media>\n      <Media>\n        <p className=\"text-muted\">{text}</p>\n      </Media>\n    </div>\n  );\n};\n\nSupportTicket.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  date: PropTypes.date,\n  text: PropTypes.string,\n  status: PropTypes.oneOf(['open', 'closed', 'pending']),\n  onClick: PropTypes.func,\n};\n\nSupportTicket.defualtProps = {\n  avatar: '',\n  name: '',\n  date: '',\n  text: '',\n  status: 'pending',\n  onClick: () => {},\n};\n\nexport default SupportTicket;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Table, Progress } from 'reactstrap';\n\nimport Avatar from 'components/Avatar';\n\nimport withBadge from 'hocs/withBadge';\n\nconst AvatarWithBadge = withBadge({\n  position: 'bottom-right',\n  color: 'success',\n})(Avatar);\n\nconst UserProgressTable = ({ headers, usersData, ...restProps }) => {\n  return (\n    <Table responsive hover {...restProps}>\n      <thead>\n        <tr className=\"text-capitalize align-middle text-center\">\n          {headers.map((item, index) => <th key={index}>{item}</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        {usersData.map(({ avatar, name, date, progress }, index) => (\n          <tr key={index}>\n            <td className=\"align-middle text-center\">\n              <AvatarWithBadge src={avatar} />\n            </td>\n            <td className=\"align-middle text-center\">{name}</td>\n            <td className=\"align-middle text-center\">{date}</td>\n            <td className=\"align-middle text-center\">\n              <Progress value={progress} style={{ height: 5 }} />\n            </td>\n            <td className=\"align-middle text-center\">{progress}%</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nUserProgressTable.propTypes = {\n  headers: PropTypes.node,\n  usersData: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string,\n      name: PropTypes.string,\n      date: PropTypes.date,\n    })\n  ),\n};\n\nUserProgressTable.defaultProps = {\n  headers: [],\n  usersData: [],\n};\n\nexport default UserProgressTable;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Card, CardText, CardTitle, Progress } from 'reactstrap';\nimport Typography from '../Typography';\n\nconst NumberWidget = ({\n  title,\n  subtitle,\n  number,\n  color,\n  progress: { value, label },\n  ...restProps\n}) => {\n  return (\n    <Card body {...restProps}>\n      <div className=\"d-flex justify-content-between\">\n        <CardText tag=\"div\">\n          <Typography className=\"mb-0\">\n            <strong>{title}</strong>\n          </Typography>\n          <Typography className=\"mb-0 text-muted small\">{subtitle}</Typography>\n        </CardText>\n        <CardTitle className={`text-${color}`}>{number}</CardTitle>\n      </div>\n      <Progress value={value} color={color} style={{ height: '8px' }} />\n      <CardText tag=\"div\" className=\"d-flex justify-content-between\">\n        <Typography tag=\"span\" className=\"text-left text-muted small\">\n          {label}\n        </Typography>\n        <Typography tag=\"span\" className=\"text-right text-muted small\">\n          {value}%\n        </Typography>\n      </CardText>\n    </Card>\n  );\n};\n\nNumberWidget.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  number: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.number.isRequired,\n  ]),\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'light',\n    'dark',\n  ]),\n  progress: PropTypes.shape({\n    value: PropTypes.number,\n    label: PropTypes.string,\n  }),\n};\n\nNumberWidget.defaultProps = {\n  title: '',\n  subtitle: '',\n  number: 0,\n  color: 'primary',\n  progress: {\n    value: 0,\n    label: '',\n  },\n};\n\nexport default NumberWidget;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport classNames from 'classnames';\n\nimport { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\n\nconst IconWidget = ({\n  bgColor,\n  icon: Icon,\n  iconProps,\n  title,\n  subtitle,\n  className,\n  ...restProps\n}) => {\n  const classes = classNames('cr-widget', className, {\n    [`bg-${bgColor}`]: bgColor,\n  });\n  return (\n    <Card inverse className={classes} {...restProps}>\n      <CardBody className=\"cr-widget__icon\">\n        <Icon size={50} {...iconProps} />\n      </CardBody>\n      <CardBody>\n        <CardTitle>{title}</CardTitle>\n        <CardSubtitle>{subtitle}</CardSubtitle>\n      </CardBody>\n    </Card>\n  );\n};\n\nIconWidget.propTypes = {\n  bgColor: PropTypes.string,\n  icon: PropTypes.component,\n  iconProps: PropTypes.object,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n};\n\nIconWidget.defaultProps = {\n  bgColor: 'primary',\n  icon: 'span',\n  iconProps: { size: 50 },\n};\n\nexport default IconWidget;\n","import ChartJS from 'chart.js';\nimport { getColor } from 'utils/colors';\n\nexport const getStackLineChart = ({ labels, data }) => canvas => {\n  const ctx = canvas.getContext('2d');\n  let gradient = ctx.createLinearGradient(0, 0, 0, 240);\n  gradient.addColorStop(\n    0,\n    ChartJS.helpers\n      .color('#00c9ff')\n      .alpha(1)\n      .rgbString()\n  );\n  gradient.addColorStop(\n    1,\n    ChartJS.helpers\n      .color('#00c9ff')\n      .alpha(0.2)\n      .rgbString()\n  );\n\n  return {\n    labels,\n    datasets: [\n      {\n        data,\n        label: 'My First dataset',\n        borderColor: getColor('primary'),\n        backgroundColor: gradient,\n        fill: 'origin',\n      },\n    ],\n  };\n};\n\nexport const stackLineChartOptions = {\n  tooltips: {\n    intersect: false,\n  },\n  animation: {\n    duration: 0,\n  },\n  scales: {\n    xAxes: [\n      {\n        display: false,\n      },\n    ],\n    yAxes: [{ display: false }],\n  },\n  legend: {\n    display: false,\n  },\n  // elements: {\n  //   line: {\n  //     tension: 0, // disables bezier curves\n  //   },\n  // },\n};\n","import product1Image from 'assets/img/products/product_640-1.jpg';\nimport product2Image from 'assets/img/products/product_640-2.jpg';\nimport product3Image from 'assets/img/products/product_640-3.jpg';\nimport product4Image from 'assets/img/products/product_640-4.jpg';\nimport product5Image from 'assets/img/products/product_640-5.jpg';\nimport product6Image from 'assets/img/products/product_640-6.jpg';\n\nimport user1Image from 'assets/img/users/100_1.jpg';\nimport user2Image from 'assets/img/users/100_2.jpg';\nimport user3Image from 'assets/img/users/100_3.jpg';\nimport user4Image from 'assets/img/users/100_4.jpg';\nimport user5Image from 'assets/img/users/100_5.jpg';\nimport user6Image from 'assets/img/users/100_6.jpg';\nimport user7Image from 'assets/img/users/100_7.jpg';\nimport user8Image from 'assets/img/users/100_8.jpg';\nimport user9Image from 'assets/img/users/100_9.jpg';\nimport user10Image from 'assets/img/users/100_10.jpg';\nimport user11Image from 'assets/img/users/100_11.jpg';\nimport user12Image from 'assets/img/users/100_12.jpg';\nimport user13Image from 'assets/img/users/100_13.jpg';\nimport user14Image from 'assets/img/users/100_14.jpg';\n\nexport const productsData = [\n  {\n    id: 1,\n    image: product1Image,\n    title: 'Admin Template',\n    description: 'Responsive admin template...',\n    right: '$36',\n  },\n  {\n    id: 2,\n    image: product2Image,\n    title: 'Schedule App',\n    description: 'Manage your schedule...',\n    right: '$9',\n  },\n  {\n    id: 3,\n    image: product3Image,\n    title: 'Chat App',\n    description: 'Realtime chat application...',\n    right: '$12',\n  },\n  {\n    id: 4,\n    image: product4Image,\n    title: 'Wordpress Business Theme',\n    description: 'Over 100+ templates and pages...',\n    right: '$24',\n  },\n  {\n    id: 5,\n    image: product5Image,\n    title: 'Camera App',\n    description: 'Over 30+ filter...',\n    right: '$6.99',\n  },\n  {\n    id: 6,\n    image: product6Image,\n    title: 'Calendar App',\n    description: 'Organize your schedule...',\n    right: '$0.99',\n  },\n];\n\nexport const avatarsData = [\n  {\n    avatar: user1Image,\n    name: 'Tom',\n    date: '3 month ago',\n  },\n  {\n    avatar: user2Image,\n    name: 'Jenny',\n    date: '1 year ago',\n  },\n  {\n    avatar: user3Image,\n    name: 'Sim',\n    date: '2 hour ago',\n  },\n  {\n    avatar: user4Image,\n    name: 'Christine',\n    date: 'a month ago',\n  },\n  {\n    avatar: user5Image,\n    name: 'Bread',\n    date: '6 months ago',\n  },\n  {\n    avatar: user6Image,\n    name: 'Dan',\n    date: '2 years ago',\n  },\n  {\n    avatar: user7Image,\n    name: 'Merry',\n    date: '3 month ago',\n  },\n  {\n    avatar: user8Image,\n    name: 'John',\n    date: '1 month ago',\n  },\n  {\n    avatar: user9Image,\n    name: 'Shane',\n    date: '7 month ago',\n  },\n  {\n    avatar: user10Image,\n    name: 'Star',\n    date: '1 year ago',\n  },\n  {\n    avatar: user11Image,\n    name: 'Jenny',\n    date: '3 month ago',\n  },\n  {\n    avatar: user12Image,\n    name: 'Park',\n    date: '4 month ago',\n  },\n  {\n    avatar: user13Image,\n    name: 'Dave',\n    date: '9 month ago',\n  },\n  {\n    avatar: user14Image,\n    name: 'Jackson',\n    date: '10 month ago',\n  },\n];\n\nexport const userProgressTableData = [\n  {\n    avatar: user1Image,\n    name: 'Tom',\n    date: '3 month ago',\n    progress: 75,\n  },\n  {\n    avatar: user2Image,\n    name: 'Jenny',\n    date: '1 year ago',\n    progress: 60,\n  },\n  {\n    avatar: user3Image,\n    name: 'Sim',\n    date: '2 hour ago',\n    progress: 50,\n  },\n  {\n    avatar: user4Image,\n    name: 'Christine',\n    date: 'a month ago',\n    progress: 40,\n  },\n  {\n    avatar: user5Image,\n    name: 'Bread',\n    date: '6 months ago',\n    progress: 30,\n  },\n  {\n    avatar: user6Image,\n    name: 'Dan',\n    date: '2 years ago',\n    progress: 25,\n  },\n];\n\nexport const supportTicketsData = [\n  {\n    id: 1,\n    avatar: user1Image,\n    name: 'Sim',\n    date: '30 mins ago',\n    text:\n      'Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy nibh euismod tinciduntut laoreet doloremagna aliquam erat volutpat.',\n    status: 'pending',\n  },\n  {\n    id: 2,\n    avatar: user2Image,\n    name: 'Jane',\n    date: '1 hour ago',\n    text:\n      'Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy nibh euismod tinciduntut laoreet doloremagna aliquam erat volutpat.',\n    status: 'open',\n  },\n  {\n    id: 3,\n    avatar: user3Image,\n    name: 'Tom',\n    date: 'yesterday',\n    text:\n      'Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy nibh euismod tinciduntut laoreet doloremagna aliquam erat volutpat.',\n    status: 'closed',\n  },\n];\n\nexport const todosData = [\n  { id: 1, title: 'task -1', done: true },\n  { id: 2, title: 'task -2', done: false },\n  { id: 3, title: 'task -3', done: true },\n  { id: 4, title: 'task -4', done: true },\n  { id: 5, title: 'task -5', done: false },\n];\n\nexport const chartjs = {\n  bar: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'Expense for this year',\n          backgroundColor: '#6a82fb',\n          stack: 'Expense',\n          data: [10000, 30000, 50000, 80000, 60000, 20000, 10000],\n        },\n        {\n          label: 'Expense for last year',\n          backgroundColor: '#fc5c7d',\n          stack: 'Expense',\n          data: [30000, 80000, 50000, 100000, 60000, 40000, 90000],\n        },\n      ],\n    },\n    options: {\n      title: {\n        display: false,\n        text: 'Chart.js Bar Chart - Stacked',\n      },\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n      },\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      scales: {\n        xAxes: [\n          {\n            stacked: true,\n            display: false,\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            display: false,\n          },\n        ],\n      },\n    },\n  },\n  doughnut: {\n    data: {\n      datasets: [\n        {\n          data: [20, 30, 40, 50, 60],\n          backgroundColor: [\n            '#6a82fb',\n            '#fc5c7d',\n            '#45b649',\n            '#00c9ff',\n            '#ffd700',\n          ],\n          label: 'Dataset 1',\n        },\n      ],\n      labels: ['Red', 'Orange', 'Yellow', 'Green', 'Blue'],\n    },\n    options: {\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      title: {\n        display: false,\n        text: 'Chart.js Doughnut Chart',\n      },\n      animation: {\n        animateScale: true,\n        animateRotate: true,\n      },\n    },\n  },\n  line: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'Revenue for this year',\n          borderColor: '#6a82fb',\n          backgroundColor: '#6a82fb',\n          data: [0, 1300, 2200, 3400, 4600, 3500, 3000],\n        },\n\n        {\n          label: 'Revenue for last year',\n          borderColor: '#fc5c7d',\n          backgroundColor: '#fc5c7d',\n          data: [0, 1300, 2200, 3400, 4600, 3500, 3000],\n        },\n      ],\n    },\n    options: {\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      title: {\n        display: false,\n        text: 'Chart.js Line Chart - Stacked Area',\n      },\n      tooltips: {\n        intersect: false,\n        mode: 'nearest',\n      },\n      hover: {\n        mode: 'index',\n      },\n      scales: {\n        xAxes: [\n          {\n            scaleLabel: {\n              display: false,\n              labelString: 'Month',\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            scaleLabel: {\n              display: false,\n              labelString: 'Value',\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n      },\n    },\n  },\n};\n","import { AnnouncementCard, TodosCard } from 'components/Card';\nimport HorizontalAvatarList from 'components/HorizontalAvatarList';\nimport MapWithBubbles from 'components/MapWithBubbles';\nimport Page from 'components/Page';\nimport ProductMedia from 'components/ProductMedia';\nimport SupportTicket from 'components/SupportTicket';\nimport UserProgressTable from 'components/UserProgressTable';\nimport { IconWidget, NumberWidget } from 'components/Widget';\nimport { getStackLineChart, stackLineChartOptions } from 'demos/chartjs';\nimport {\n  avatarsData,\n  chartjs,\n  productsData,\n  supportTicketsData,\n  todosData,\n  userProgressTableData,\n} from 'demos/dashboardPage';\nimport React from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport {\n  MdBubbleChart,\n  MdInsertChart,\n  MdPersonPin,\n  MdPieChart,\n  MdRateReview,\n  MdShare,\n  MdShowChart,\n  MdThumbUp,\n} from 'react-icons/md';\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  CardDeck,\n  CardGroup,\n  CardHeader,\n  CardTitle,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  Row,\n} from 'reactstrap';\nimport { getColor } from 'utils/colors';\n\nconst today = new Date();\nconst lastWeek = new Date(\n  today.getFullYear(),\n  today.getMonth(),\n  today.getDate() - 7,\n);\n\nclass DashboardPage extends React.Component {\n  componentDidMount() {\n    // this is needed, because InfiniteCalendar forces window scroll\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    const primaryColor = getColor('primary');\n    const secondaryColor = getColor('secondary');\n\n    return (\n      <Page\n        className=\"DashboardPage\"\n        title=\"Dashboard\"\n        breadcrumbs={[{ name: 'Dashboard', active: true }]}\n      >\n        <Row>\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Total Profit\"\n              subtitle=\"This month\"\n              number=\"9.8k\"\n              color=\"secondary\"\n              progress={{\n                value: 75,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Monthly Visitors\"\n              subtitle=\"This month\"\n              number=\"5,400\"\n              color=\"secondary\"\n              progress={{\n                value: 45,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"New Users\"\n              subtitle=\"This month\"\n              number=\"3,400\"\n              color=\"secondary\"\n              progress={{\n                value: 90,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Bounce Rate\"\n              subtitle=\"This month\"\n              number=\"38%\"\n              color=\"secondary\"\n              progress={{\n                value: 60,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg=\"8\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>\n                Total Revenue{' '}\n                <small className=\"text-muted text-capitalize\">This year</small>\n              </CardHeader>\n              <CardBody>\n                <Line data={chartjs.line.data} options={chartjs.line.options} />\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>Total Expense</CardHeader>\n              <CardBody>\n                <Bar data={chartjs.bar.data} options={chartjs.bar.options} />\n              </CardBody>\n              <ListGroup flush>\n                <ListGroupItem>\n                  <MdInsertChart size={25} color={primaryColor} /> Cost of sales{' '}\n                  <Badge color=\"secondary\">$3000</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdBubbleChart size={25} color={primaryColor} /> Management\n                  costs <Badge color=\"secondary\">$1200</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdShowChart size={25} color={primaryColor} /> Financial costs{' '}\n                  <Badge color=\"secondary\">$800</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdPieChart size={25} color={primaryColor} /> Other operating\n                  costs <Badge color=\"secondary\">$2400</Badge>\n                </ListGroupItem>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n\n        <CardGroup style={{ marginBottom: '1rem' }}>\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdThumbUp}\n            title=\"50+ Likes\"\n            subtitle=\"People you like\"\n          />\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdRateReview}\n            title=\"10+ Reviews\"\n            subtitle=\"New Reviews\"\n          />\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdShare}\n            title=\"30+ Shares\"\n            subtitle=\"New Shares\"\n          />\n        </CardGroup>\n\n        <Row>\n          <Col md=\"6\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>New Products</CardHeader>\n              <CardBody>\n                {productsData.map(\n                  ({ id, image, title, description, right }) => (\n                    <ProductMedia\n                      key={id}\n                      image={image}\n                      title={title}\n                      description={description}\n                      right={right}\n                    />\n                  ),\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col md=\"6\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>New Users</CardHeader>\n              <CardBody>\n                <UserProgressTable\n                  headers={[\n                    <MdPersonPin size={25} />,\n                    'name',\n                    'date',\n                    'participation',\n                    '%',\n                  ]}\n                  usersData={userProgressTableData}\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [0, 13000, 5000, 24000, 16000, 25000, 10000],\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute' }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Sales\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [10000, 15000, 5000, 10000, 5000, 10000, 10000],\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute' }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Revenue\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [0, 13000, 5000, 24000, 16000, 25000, 10000].reverse(),\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute', right: 0 }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Profit\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <InfiniteCalendar\n              selected={today}\n              minDate={lastWeek}\n              width=\"100%\"\n              theme={{\n                accentColor: primaryColor,\n                floatingNav: {\n                  background: secondaryColor,\n                  chevron: primaryColor,\n                  color: '#FFF',\n                },\n                headerColor: primaryColor,\n                selectionColor: secondaryColor,\n                textColor: {\n                  active: '#FFF',\n                  default: '#333',\n                },\n                todayColor: secondaryColor,\n                weekdayColor: primaryColor,\n              }}\n            />\n          </Col>\n\n          <Col lg=\"8\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card inverse className=\"bg-gradient-primary\">\n              <CardHeader className=\"bg-gradient-primary\">\n                Map with bubbles\n              </CardHeader>\n              <CardBody>\n                <MapWithBubbles />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <CardDeck style={{ marginBottom: '1rem' }}>\n          <Card body style={{ overflowX: 'auto','paddingBottom':'15px','height': 'fit-content','paddingTop': 'inherit'}}>\n            <HorizontalAvatarList\n              avatars={avatarsData}\n              avatarProps={{ size: 50 }}\n            />\n          </Card>\n\n          <Card body style={{ overflowX: 'auto','paddingBottom':'15px','height': 'fit-content','paddingTop': 'inherit'}}>\n            <HorizontalAvatarList\n              avatars={avatarsData}\n              avatarProps={{ size: 50 }}\n              reversed\n            />\n          </Card>\n        </CardDeck>\n\n        <Row>\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <AnnouncementCard\n              color=\"gradient-secondary\"\n              header=\"Announcement\"\n              avatarSize={60}\n              name=\"Jamy\"\n              date=\"1 hour ago\"\n              text=\"Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy euismod tinciduntut laoreet doloremagna\"\n              buttonProps={{\n                children: 'show',\n              }}\n              style={{ height: 500 }}\n            />\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>\n                <div className=\"d-flex justify-content-between align-items-center\">\n                  <span>Support Tickets</span>\n                  <Button>\n                    <small>View All</small>\n                  </Button>\n                </div>\n              </CardHeader>\n              <CardBody>\n                {supportTicketsData.map(supportTicket => (\n                  <SupportTicket key={supportTicket.id} {...supportTicket} />\n                ))}\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <TodosCard todos={todosData} />\n          </Col>\n        </Row>\n      </Page>\n    );\n  }\n}\nexport default DashboardPage;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\nimport { Media, Button } from 'reactstrap';\n\nimport Typography from 'components/Typography';\n\nconst ProductMedia = ({ parentId, keyId, image, title, description, right, years, exit, openEditModal, deleteEducation, editEducation, ...restProps }) => {\n  return (\n    <Media {...restProps}>\n      <Media left>\n        <Media\n          object\n          src={image}\n          className=\"rounded mr-2 mb-2\"\n          style={{ width: 100, height: 'auto' }}\n        />\n      </Media>\n      <Media body className=\"overflow-hidden\">\n        <Media heading tag=\"h5\" className=\"text-truncate\">\n          {title}\n        </Media>\n        <p className=\"text-muted text-truncate\">{description} {years}</p>\n      </Media>\n      <Media right className=\"align-self-center\">\n        {right && typeof right === 'string' ? (\n          <Typography type=\"h5\">{right}</Typography>\n        ) : (\n          right\n        )}\n      </Media> \n      <Media right className=\"align-self-center\">\n        <Button onClick={() => openEditModal(\"editEducation\", restProps.eduData)} outline color=\"info\" size=\"sm\" style={{marginRight: \"5px\", marginBottom: \"3px\"}}>\n          edit\n        </Button>\n      \n        <Button onClick={() => deleteEducation(keyId, parentId)} outline color=\"danger\" size=\"sm\" style={{marginRight: \"5px\", marginBottom: \"3px\"}}>\n          delete\n        </Button>\n      </Media> \n    </Media>  \n  );\n}; \n\nProductMedia.propTypes = {\n  key: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  right: PropTypes.node,\n  years: PropTypes.string,\n  openEditModal: PropTypes.func,\n  deleteEducation: PropTypes.func,\n  editEducation: PropTypes.func\n};\n\nexport default ProductMedia;\n","module.exports = __webpack_public_path__ + \"static/media/product_640-1.a9a0ec64.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-2.da0b0457.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-3.64ed27c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-4.2110d8cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-5.bf8840bd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-6.f9249755.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_6.de882536.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_7.1dce100f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_8.a4be0bbf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_9.798c02eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_10.56d054ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_11.336faadc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_12.1e0889af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_13.63265e92.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_14.595b8cbd.jpg\";"],"sourceRoot":""}